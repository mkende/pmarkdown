Revision history for pmarkdown and the Markdown::Perl module.

1.08 - ?

 - Add a new yaml_metadata hook to receive the parsed YAML.

1.07 - 2024-05-25

 - Allow to specify a link content through the resolve_link_ref hook.

1.06 - 2024-05-17

 - Add support for setting processing hooks.
 - Add a hook to resolve otherwise unresolved link references.

1.05 - 2024-05-16

 [Improve the inline_delimiters option]
 - Document the option.
 - Set the correct value for the original markdown syntax.
 - Support the case where a delimiter does not have a repeated variant.
 - Validate the value of the option.
 - Allow to pass a class name to insert an HTML <span>, rather than a
   specific tag.

 [Other changes]
 - Decode the command line argument strings according to the current locale and
   decode/encode the standard input/output if we are connected to a tty.

1.04 - 2024-05-09

 - Remove our custom make targets on platforms that don’t have GNU Make to
   avoid parse failures.

1.03 - 2024-04-10

 - Disable hard line breaks using two spaces in our default syntax because they
   are invisible in the source file.
 - Support a YAML table at the start of a document to provide metadata.
 - Bugfixes:
   - Disable some part of the Makefile of the project that can’t be parsed under
     Solaris.

1.02 - 2024-04-06

 - Improvement to the support of the original markdown syntax. This is probably
   the best that we will do as this is now quite faithful and some of the
   remaining differences are bugs in the original implementation.
 - Bugfixes:
   - Do not make a list loose when it is followed by blank lines.
   - Tab stops after list markers are properly computed.

1.01 - 2024-04-05

 - Deactivate the support for setext headings in pmarkdown default syntax.
 - Remove a copy of the input Markdown when using the functional interface.
 - Bugfixes:
   - Correctly scope a mode set in a call to convert().
   - Make the OO interface usable with read-only scalar for the Markdown
     content.

1.00 - 2024-03-31

 - Initial release with full support for the CommonMark spec, the GitHub
   Flavored Markdown extentions, and partial support for original Markdown
   syntax.
